// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using PatientRecordCURDWebApp.Data;

#nullable disable

namespace PatientRecordCURDWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250511154607_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientRecordCURDWebApp.Models.MedicalRecord", b =>
                {
                    b.Property<Guid>("PatientId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("NVARCHAR2(3)");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)");

                    b.Property<string>("CholesterolLevel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<string>("ChronicDiseases")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("HepatitisType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("NVARCHAR2(3)");

                    b.Property<string>("MedicalHistory")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SugarLevel")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("NVARCHAR2(19)");

                    b.HasKey("PatientId");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("PatientRecordCURDWebApp.Models.Patient", b =>
                {
                    b.Property<Guid>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<byte>("PatientAge")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("PatientContact")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)");

                    b.Property<int>("PatientGender")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientRecordCURDWebApp.Models.MedicalRecord", b =>
                {
                    b.HasOne("PatientRecordCURDWebApp.Models.Patient", null)
                        .WithOne("MedicalRecord")
                        .HasForeignKey("PatientRecordCURDWebApp.Models.MedicalRecord", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientRecordCURDWebApp.Models.Patient", b =>
                {
                    b.Navigation("MedicalRecord")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
